name: Test and Publish

on:
  push:
    branches: ["*"]
    tags: ["v*", "V*", "v[0-9]+.[0-9]+.[0-9]+*"]

  pull_request:
    branches: ["*"]

  workflow_dispatch:

jobs:
  # test:
  #   name: Test
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v1
  #     - uses: actions/setup-java@v1
  #       with:
  #         java-version: "12.x"
  #     - uses: subosito/flutter-action@v1
  #       with:
  #         channel: "stable" # or: 'dev' or 'beta'

  #     - name: Install packages dependencies
  #       run: flutter pub get

  #     - name: Analyze the project's Dart code
  #       run: flutter analyze

  #     - name: Run tests
  #       run: flutter test

  #     - name: Run tests coverage
  #       run: flutter test --coverage

  publish:
    # if: "(contains(github.event.head_commit.message, '[pub]') &&
    #     contains('
    #       refs/heads/master
    #       refs/heads/develop
    #       refs/tags
    #       refs/tags/releases',
    #       github.ref)) ||
    #     startsWith('
    #       refs/tags/
    #       refs/tags/releases/',
    #       github.ref)"
    name: Publish
    permissions:
      id-token: write
    # needs: [test]
    runs-on: ubuntu-latest
    timeout-minutes: 5

    # container:
    #   image: google/dart:latest

    steps:
      - uses: actions/checkout@v3
      - name: Run a one-line script
        id: vars
        run: echo "pkg_tag=$(cat pubspec.yaml | grep version | head -1 | awk -F= "{ print $2 }" | sed 's/[version:,\",]//g' | tr -d '[[:space:]]')" >> $GITHUB_OUTPUT
      - uses: mathieudutour/github-tag-action@v6.1
        with:
          custom_tag: ${{ steps.vars.outputs.pkg_tag }}
          github_token: ${{ secrets.TOKEN }}
          # message: "Latest release"
      - uses: dart-lang/setup-dart@v1
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"

      - name: Install dependencies
        run: dart pub get
      - name: code format
        run: dart format lib/*/*.dart lib/*.dart
      - name: Publish pkg
        run: dart pub publish --server=https://pub.dartlang.org -f
